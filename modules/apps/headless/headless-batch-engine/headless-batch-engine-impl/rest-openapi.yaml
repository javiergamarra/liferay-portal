components:
    schemas:
        Task:
            properties:
                className:
                    description: The item class name for which data will be processed in batch.
                    type: string
                endTime:
                    description: The end time of task operation.
                    format: int64
                    minimum: 0
                    type: integer
                errorMessage:
                    description: The error message in case of task's failed execution.
                    type: string
                executeStatus:
                    description: The status of task's execution.
                    type: string
                id:
                    description: The task's ID.
                    format: int64
                    minimum: 0
                    type: integer
                operation:
                    description: The operation of task.
                    type: string
                startTime:
                    description: The start time of task operation.
                    format: int64
                    minimum: 0
                    type: integer
                version:
                    description: The version of item class.
                    type: string
            type: object
        body:
            properties:
                file:
                    format: binary
                    type: string
            type: object
info:
    description: ""
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Headless Batch Engine"
    version: v1.0
openapi: 3.0.1
paths:
    /import/{taskId}/:
        delete:
            description: Uploads a new file for deleting items in batch.
            operationId: deleteImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: version
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/body'
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Task"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Task"
                    description: Async
            tags: ["Task"]
        get:
            operationId: getImportTask
            parameters:
                - in: path
                  name: taskId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Task"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Task"
                    description: Async
            tags: ["Task"]
        post:
            description: Uploads a new file for creating new items in batch.
            operationId: postImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: version
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/body'
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Task"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Task"
                    description: Async
            tags: ["Task"]
        put:
            description: Uploads a new file for updating items in batch.
            operationId: putImportTask
            parameters:
                - in: path
                  name: className
                  required: true
                  schema:
                      type: string
                - in: path
                  name: version
                  required: true
                  schema:
                      type: string
                - in: query
                  name: callbackURL
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/body'
                required: true
            responses:
                202:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Task"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Task"
                    description: Async
            tags: ["Task"]