components:
    schemas:
        AssetType:
            description: https://www.schema.org/AssetType
            properties:
                required:
                    type: boolean
                subtype:
                    type: string
                type:
                    enum: [AllAssetTypes, BlogPosting, Document, KnowledgeBaseArticle, Organization, StructuredContent, UserAccount, WebPage, WebSite, WikiPage]
                    type: string
            type: object
        Creator:
            description: https://www.schema.org/Creator
            properties:
                additionalName:
                    type: string
                familyName:
                    type: string
                givenName:
                    type: string
                id:
                    format: int64
                    type: integer
                image:
                    format: uri
                    type: string
                name:
                    type: string
                profileURL:
                    format: uri
                    type: string
            type: object
        Email:
            description: https://www.schema.org/Email
            properties:
                email:
                    type: string
                id:
                    format: int64
                    type: integer
                primary:
                    type: boolean
                type:
                    type: string
            type: object
        Keyword:
            description: https://www.schema.org/Keyword
            properties:
                siteId:
                    format: int64
                    type: integer
                creator:
                    $ref: "#/components/schemas/Creator"
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                id:
                    format: int64
                    type: integer
                keywordUsageCount:
                    type: number
                name:
                    type: string
            required:
                - name
            type: object
        Organization:
            description: https://www.schema.org/Organization
            properties:
                comment:
                    type: string
                contactInformation:
                    description: https://www.schema.org/ContactInformation
                    properties:
                        emails:
                            items:
                                $ref: "#/components/schemas/Email"
                            readOnly: true
                            type: array
                        postalAddresses:
                            items:
                                $ref: "#/components/schemas/PostalAddress"
                            readOnly: true
                            type: array
                        telephones:
                            items:
                                $ref: "#/components/schemas/Phone"
                            readOnly: true
                            type: array
                        webUrls:
                            items:
                                $ref: "#/components/schemas/WebUrl"
                            readOnly: true
                            type: array
                    type: object
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                id:
                    format: int64
                    type: integer
                image:
                    format: uri
                    type: string
                keywords:
                    items:
                        type: string
                    type: array
                location:
                    description: https://www.schema.org/PostalAddress
                    properties:
                        addressCountry:
                            type: string
                        addressRegion:
                            type: string
                        id:
                            format: int64
                            type: integer
                    type: object
                name:
                    type: string
                numberOfOrganizations:
                    type: number
                parentOrganization:
                    allOf:
                        - $ref: "#/components/schemas/Organization"
                    readOnly: true
                parentOrganizationId:
                    format: int64
                    type: integer
                    writeOnly: true
                services:
                    description: https://www.schema.org/Service
                    items:
                        properties:
                            hoursAvailable:
                                description: https://www.schema.org/OpeningHoursSpecification
                                items:
                                    properties:
                                        closes:
                                            type: string
                                        dayOfWeek:
                                            type: string
                                        id:
                                            format: int64
                                            type: integer
                                        opens:
                                            type: string
                                    type: object
                                type: array
                            id:
                                format: int64
                                type: integer
                            serviceType:
                                type: string
                        type: object
                    type: array
            type: object
        Phone:
            description: https://www.schema.org/Phone
            properties:
                extension:
                    type: string
                id:
                    format: int64
                    type: integer
                phoneNumber:
                    type: string
                phoneType:
                    type: string
                primary:
                    type: boolean
            type: object
        PostalAddress:
            description: https://www.schema.org/PostalAddress
            properties:
                addressCountry:
                    type: string
                addressLocality:
                    type: string
                addressRegion:
                    type: string
                addressType:
                    type: string
                id:
                    format: int64
                    type: integer
                postalCode:
                    type: string
                primary:
                    type: boolean
                streetAddressLine1:
                    type: string
                streetAddressLine2:
                    type: string
                streetAddressLine3:
                    type: string
            type: object
        Role:
            description: https://www.schema.org/Role
            properties:
                availableLanguages:
                    items:
                        type: string
                    type: array
                creator:
                    $ref: "#/components/schemas/Creator"
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                description:
                    type: string
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                roleType:
                    type: string
            type: object
        Segment:
            description: https://schema.org/Audience
            properties:
                active:
                    type: boolean
                siteId:
                    format: int64
                    type: integer
                criteria:
                    type: string
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                source:
                    type: string
            type: object
        SegmentUser:
            description: https://www.schema.org/UserAccount
            properties:
                email:
                    type: string
                id:
                    format: int64
                    type: integer
                name:
                    type: string
            type: object
        TaxonomyCategory:
            description: https://www.schema.org/Category
            properties:
                availableLanguages:
                    items:
                        type: string
                    type: array
                creator:
                    allOf:
                        - $ref: "#/components/schemas/Creator"
                    readOnly: true
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                description:
                    type: string
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                numberOfTaxonomyCategories:
                    type: number
                parentTaxonomyCategory:
                    properties:
                        id:
                            format: int64
                            type: integer
                        name:
                            type: string
                    type: object
                parentTaxonomyVocabulary:
                    properties:
                        id:
                            format: int64
                            type: integer
                        name:
                            type: string
                    readOnly: true
                    type: object
                parentVocabularyId:
                    format: int64
                    type: integer
                    writeOnly: true
                viewableBy:
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        TaxonomyVocabulary:
            description: https://www.schema.org/Vocabulary
            properties:
                assetTypes:
                    items:
                        $ref: "#/components/schemas/AssetType"
                    type: array
                availableLanguages:
                    items:
                        type: string
                    type: array
                siteId:
                    format: int64
                    type: integer
                creator:
                    $ref: "#/components/schemas/Creator"
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                description:
                    type: string
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                numberOfTaxonomyCategories:
                    type: number
                viewableBy:
                    enum: [Anyone, Members, Owner]
                    type: string
                    writeOnly: true
            required:
                - name
            type: object
        UserAccount:
            description: https://www.schema.org/UserAccount
            properties:
                additionalName:
                    type: string
                alternateName:
                    type: string
                birthDate:
                    format: date-time
                    type: string
                contactInformation:
                    description: https://www.schema.org/ContactInformation
                    properties:
                        emails:
                            items:
                                $ref: "#/components/schemas/Email"
                            readOnly: true
                            type: array
                        facebook:
                            type: string
                        id:
                            format: int64
                            type: integer
                        jabber:
                            type: string
                        postalAddresses:
                            items:
                                $ref: "#/components/schemas/PostalAddress"
                            readOnly: true
                            type: array
                        skype:
                            type: string
                        sms:
                            type: string
                        telephones:
                            items:
                                $ref: "#/components/schemas/Phone"
                            readOnly: true
                            type: array
                        twitter:
                            type: string
                        webUrls:
                            items:
                                $ref: "#/components/schemas/WebUrl"
                            readOnly: true
                            type: array
                    type: object
                dashboardURL:
                    type: string
                dateCreated:
                    format: date-time
                    type: string
                dateModified:
                    format: date-time
                    type: string
                email:
                    type: string
                familyName:
                    type: string
                givenName:
                    type: string
                honorificPrefix:
                    type: string
                honorificSuffix:
                    type: string
                id:
                    format: int64
                    type: integer
                image:
                    format: uri
                    type: string
                jobTitle:
                    type: string
                keywords:
                    items:
                        type: string
                    type: array
                myOrganizations:
                    items:
                        $ref: "#/components/schemas/Organization"
                    readOnly: true
                    type: array
                myOrganizationsIds:
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                name:
                    type: string
                profileURL:
                    type: string
                roles:
                    items:
                        $ref: "#/components/schemas/Role"
                    readOnly: true
                    type: array
                rolesIds:
                    items:
                        format: int64
                        type: integer
                    type: array
                    writeOnly: true
                tasksAssignedToMe:
                    items:
                        format: uri
                        type: string
                    type: array
                tasksAssignedToMyRoles:
                    items:
                        format: uri
                        type: string
                    type: array
            required:
                - email
                - familyName
                - givenName
            type: object
        WebUrl:
            description: https://www.schema.org/WebUrl
            properties:
                id:
                    format: int64
                    type: integer
                url:
                    type: string
                urlType:
                    type: string
            type: object
info:
    description: ""
    title: "Headless Foundation"
    version: v1.0
openapi: 3.0.1
paths:
    "/sites/{siteId}/keywords":
        get:
            operationId: getSiteKeywordsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Keyword"
                                type: array
                    description: ""
            tags: ["Keyword"]
        post:
            operationId: postSiteKeyword
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Keyword"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                    description: ""
            tags: ["Keyword"]
    "/sites/{siteId}/segments":
        get:
            operationId: getSiteSegmentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Segment"
                                type: array
                    description: ""
            tags: ["Segment"]
    "/sites/{siteId}/taxonomy-vocabularies":
        get:
            operationId: getSiteTaxonomyVocabulariesPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyVocabulary"
                                type: array
                    description: ""
            tags: ["TaxonomyVocabulary"]
        post:
            operationId: postSiteTaxonomyVocabulary
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
    "/sites/{siteId}/user-accounts/{userAccountId}/segments":
        get:
            operationId: getSiteUserAccountSegmentsPage
            parameters:
                - in: path
                  name: siteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Segment"
                                type: array
                    description: ""
            tags: ["Segment"]
    "/emails/{emailId}":
        get:
            operationId: getEmail
            parameters:
                - in: path
                  name: emailId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Email"
                    description: ""
            tags: ["Email"]
    "/keywords/{keywordId}":
        delete:
            operationId: deleteKeyword
            parameters:
                - in: path
                  name: keywordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["Keyword"]
        get:
            operationId: getKeyword
            parameters:
                - in: path
                  name: keywordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                    description: ""
            tags: ["Keyword"]
        put:
            operationId: putKeyword
            parameters:
                - in: path
                  name: keywordId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Keyword"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Keyword"
                    description: ""
            tags: ["Keyword"]
    "/my-user-accounts/{userAccountId}":
        get:
            operationId: getMyUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                    description: ""
            tags: ["UserAccount"]
    "/my-user-accounts/{userAccountId}/organizations":
        get:
            operationId: getMyUserAccountOrganizationsPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                    description: ""
            tags: ["Organization"]
    "/my-user-accounts/{userAccountId}/roles":
        get:
            operationId: getMyUserAccountRolesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
                    description: ""
            tags: ["Role"]
    "/organizations":
        get:
            operationId: getOrganizationsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                    description: ""
            tags: ["Organization"]
    "/organizations/{organizationId}":
        get:
            operationId: getOrganization
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Organization"
                    description: ""
            tags: ["Organization"]
    "/organizations/{organizationId}/emails":
        get:
            operationId: getOrganizationEmailsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Email"
                                type: array
                    description: ""
            tags: ["Email"]
    "/organizations/{organizationId}/phones":
        get:
            operationId: getOrganizationPhonesPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Phone"
                                type: array
                    description: ""
            tags: ["Phone"]
    "/organizations/{organizationId}/postal-addresses":
        get:
            operationId: getOrganizationPostalAddressesPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
                    description: ""
            tags: ["PostalAddress"]
    "/organizations/{organizationId}/user-accounts":
        get:
            operationId: getOrganizationUserAccountsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                    description: ""
            tags: ["UserAccount"]
    "/organizations/{organizationId}/web-urls":
        get:
            operationId: getOrganizationWebUrlsPage
            parameters:
                - in: path
                  name: organizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/WebUrl"
                                type: array
                    description: ""
            tags: ["WebUrl"]
    "/organizations/{parentOrganizationId}/organizations":
        get:
            operationId: getOrganizationOrganizationsPage
            parameters:
                - in: path
                  name: parentOrganizationId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                    description: ""
            tags: ["Organization"]
    "/phones/{phoneId}":
        get:
            operationId: getPhone
            parameters:
                - in: path
                  name: phoneId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Phone"
                    description: ""
            tags: ["Phone"]
    "/postal-addresses/{postalAddressId}":
        get:
            operationId: getPostalAddress
            parameters:
                - in: path
                  name: postalAddressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                    description: ""
            tags: ["PostalAddress"]
    "/roles":
        get:
            operationId: getRolesPage
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
                    description: ""
            tags: ["Role"]
    "/roles/{roleId}":
        get:
            operationId: getRole
            parameters:
                - in: path
                  name: roleId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
                    description: ""
            tags: ["Role"]
    "/segments/{segmentId}/user-accounts":
        get:
            operationId: getSegmentUserAccountsPage
            parameters:
                - in: path
                  name: segmentId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/SegmentUser"
                                type: array
                    description: ""
            tags: ["SegmentUser"]
    "/taxonomy-categories/{parentTaxonomyCategoryId}/taxonomy-categories":
        get:
            operationId: getTaxonomyCategoryTaxonomyCategoriesPage
            parameters:
                - in: path
                  name: parentTaxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyCategory"
                                type: array
                    description: ""
            tags: ["TaxonomyCategory"]
        post:
            operationId: postTaxonomyCategoryTaxonomyCategory
            parameters:
                - in: path
                  name: parentTaxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
    "/taxonomy-categories/{taxonomyCategoryId}":
        delete:
            operationId: deleteTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["TaxonomyCategory"]
        get:
            operationId: getTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
        patch:
            operationId: patchTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
        put:
            operationId: putTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyCategoryId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
    "/taxonomy-vocabularies/{taxonomyVocabularyId}":
        delete:
            operationId: deleteTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["TaxonomyVocabulary"]
        get:
            operationId: getTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
        patch:
            operationId: patchTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
        put:
            operationId: putTaxonomyVocabulary
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyVocabulary"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyVocabulary"
                    description: ""
            tags: ["TaxonomyVocabulary"]
    "/taxonomy-vocabularies/{taxonomyVocabularyId}/taxonomy-categories":
        get:
            operationId: getTaxonomyVocabularyTaxonomyCategoriesPage
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TaxonomyCategory"
                                type: array
                    description: ""
            tags: ["TaxonomyCategory"]
        post:
            operationId: postTaxonomyVocabularyTaxonomyCategory
            parameters:
                - in: path
                  name: taxonomyVocabularyId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TaxonomyCategory"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaxonomyCategory"
                    description: ""
            tags: ["TaxonomyCategory"]
    "/user-accounts":
        get:
            operationId: getUserAccountsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                    description: ""
            tags: ["UserAccount"]
        post:
            operationId: postUserAccount
            parameters: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                                userAccount:
                                    $ref: "#/components/schemas/UserAccount"
                            type: object
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                    description: ""
            tags: ["UserAccount"]
    "/user-accounts/{userAccountId}":
        delete:
            operationId: deleteUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                    description: ""
            tags: ["UserAccount"]
        get:
            operationId: getUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                    description: ""
            tags: ["UserAccount"]
        put:
            operationId: putUserAccount
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserAccount"
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserAccount"
                    description: ""
            tags: ["UserAccount"]
    "/user-accounts/{userAccountId}/emails":
        get:
            operationId: getUserAccountEmailsPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Email"
                                type: array
                    description: ""
            tags: ["Email"]
    "/user-accounts/{userAccountId}/organizations":
        get:
            operationId: getUserAccountOrganizationsPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Organization"
                                type: array
                    description: ""
            tags: ["Organization"]
    "/user-accounts/{userAccountId}/phones":
        get:
            operationId: getUserAccountPhonesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Phone"
                                type: array
                    description: ""
            tags: ["Phone"]
    "/user-accounts/{userAccountId}/postal-addresses":
        get:
            operationId: getUserAccountPostalAddressesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
                    description: ""
            tags: ["PostalAddress"]
    "/user-accounts/{userAccountId}/roles":
        get:
            operationId: getUserAccountRolesPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Role"
                                type: array
                    description: ""
            tags: ["Role"]
    "/user-accounts/{userAccountId}/web-urls":
        get:
            operationId: getUserAccountWebUrlsPage
            parameters:
                - in: path
                  name: userAccountId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/WebUrl"
                                type: array
                    description: ""
            tags: ["WebUrl"]
    "/web-sites/{webSiteId}/user-accounts":
        get:
            operationId: getWebSiteUserAccountsPage
            parameters:
                - in: path
                  name: webSiteId
                  required: true
                  schema:
                      format: int64
                      type: integer
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/UserAccount"
                                type: array
                    description: ""
            tags: ["UserAccount"]
    "/web-urls/{webUrlId}":
        get:
            operationId: getWebUrl
            parameters:
                - in: path
                  name: webUrlId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/WebUrl"
                    description: ""
            tags: ["WebUrl"]